apply plugin: "application"
apply plugin: "com.bmuschko.docker-remote-api"
apply plugin: "com.google.protobuf"

mainClassName = "cool.houge.logic.main.LogicMain"

jar {
  manifest {
    attributes "Multi-Release": "true"
  }
}

def grpcGeneratedFilesBaseDir = "${projectDir}/generated"
sourceSets {
  main {
    java {
      srcDir "${grpcGeneratedFilesBaseDir}/main/java"
      srcDir "${grpcGeneratedFilesBaseDir}/main/grpc"
      srcDir "${grpcGeneratedFilesBaseDir}/main/reactor"
    }
    proto {
      include "cool/houge/grpc/agent/*.proto"
    }
  }
}

protobuf {
  generatedFilesBaseDir = grpcGeneratedFilesBaseDir
  protoc {
    artifact = "com.google.protobuf:protoc:3.17.3"
  }
  plugins {
    grpc {
      artifact = "io.grpc:protoc-gen-grpc-java:1.39.0"
    }
    reactor {
      artifact = "com.salesforce.servicelibs:reactor-grpc:1.1.0"
    }
  }
  generateProtoTasks {
    all()*.plugins {
      grpc {}
      reactor {}
    }
  }
}

File dockerInputDir() {
  def f = file("${buildDir}/docker/")
  if (!f.exists()) {
    f.mkdirs()
  }
  return f
}

task copyDockerResource {
  group "docker"
  doLast {
    copy {
      from("${buildDir}/libs")
      into(dockerInputDir())
      include("*-all.jar")
      rename(".*-all.jar", "app.jar")
    }
    copy {
      from(projectDir)
      into(dockerInputDir())
      include("Dockerfile")
    }
  }
}

task buildImage(type: com.bmuschko.gradle.docker.tasks.image.DockerBuildImage) {
  group "docker"
  dependsOn("shadowJar", "copyDockerResource")
  inputDir = dockerInputDir()
  images.addAll("kevin70/${project.name}:latest", "kevin70/${project.name}:${version}".toString())
}

dependencies {
  protobuf(project(":houge-proto"))

  implementation(project(":houge-infra"))
  implementation("com.typesafe:config")
  implementation("com.google.guava:guava")
  implementation("com.google.inject:guice")
  implementation("org.roaringbitmap:RoaringBitmap")
  implementation("io.projectreactor.netty:reactor-netty")
  implementation("com.fasterxml.jackson.core:jackson-databind")

  // gRPC
  implementation("io.grpc:grpc-netty")
  implementation("io.grpc:grpc-protobuf")
  implementation("io.grpc:grpc-stub")
  implementation("com.salesforce.servicelibs:reactor-grpc-stub:1.1.0")

  // 日志
  implementation("org.apache.logging.log4j:log4j-core")
  implementation("org.apache.logging.log4j:log4j-slf4j-impl")

  // 工具
  implementation("io.projectreactor:reactor-tools")
}
