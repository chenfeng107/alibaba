/*
 * This file is generated by jOOQ.
 */
package cool.houge.infra.db.tables.records;


import cool.houge.infra.db.tables.User;

import java.time.LocalDateTime;

import javax.annotation.Nonnull;
import javax.annotation.Nullable;
import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.15.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserRecord extends TableRecordImpl<UserRecord> implements Record4<Long, String, LocalDateTime, LocalDateTime> {

    /**
     * Setter for <code>public.t_user.id</code>.
     */
    public void setId(@Nonnull Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.t_user.id</code>.
     */
    @Nonnull
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.t_user.origin_uid</code>. 原用户 ID
     */
    public void setOriginUid(@Nullable String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.t_user.origin_uid</code>. 原用户 ID
     */
    @Nullable
    public String getOriginUid() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.t_user.create_time</code>. 创建时间
     */
    public void setCreateTime(@Nonnull LocalDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.t_user.create_time</code>. 创建时间
     */
    @Nonnull
    public LocalDateTime getCreateTime() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>public.t_user.update_time</code>. 更新时间
     */
    public void setUpdateTime(@Nonnull LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.t_user.update_time</code>. 更新时间
     */
    @Nonnull
    public LocalDateTime getUpdateTime() {
        return (LocalDateTime) get(3);
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    @Nonnull
    public Row4<Long, String, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    @Nonnull
    public Row4<Long, String, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    @Nonnull
    public Field<Long> field1() {
        return User.USER.ID;
    }

    @Override
    @Nonnull
    public Field<String> field2() {
        return User.USER.ORIGIN_UID;
    }

    @Override
    @Nonnull
    public Field<LocalDateTime> field3() {
        return User.USER.CREATE_TIME;
    }

    @Override
    @Nonnull
    public Field<LocalDateTime> field4() {
        return User.USER.UPDATE_TIME;
    }

    @Override
    @Nonnull
    public Long component1() {
        return getId();
    }

    @Override
    @Nullable
    public String component2() {
        return getOriginUid();
    }

    @Override
    @Nonnull
    public LocalDateTime component3() {
        return getCreateTime();
    }

    @Override
    @Nonnull
    public LocalDateTime component4() {
        return getUpdateTime();
    }

    @Override
    @Nonnull
    public Long value1() {
        return getId();
    }

    @Override
    @Nullable
    public String value2() {
        return getOriginUid();
    }

    @Override
    @Nonnull
    public LocalDateTime value3() {
        return getCreateTime();
    }

    @Override
    @Nonnull
    public LocalDateTime value4() {
        return getUpdateTime();
    }

    @Override
    @Nonnull
    public UserRecord value1(@Nonnull Long value) {
        setId(value);
        return this;
    }

    @Override
    @Nonnull
    public UserRecord value2(@Nullable String value) {
        setOriginUid(value);
        return this;
    }

    @Override
    @Nonnull
    public UserRecord value3(@Nonnull LocalDateTime value) {
        setCreateTime(value);
        return this;
    }

    @Override
    @Nonnull
    public UserRecord value4(@Nonnull LocalDateTime value) {
        setUpdateTime(value);
        return this;
    }

    @Override
    @Nonnull
    public UserRecord values(@Nonnull Long value1, @Nullable String value2, @Nonnull LocalDateTime value3, @Nonnull LocalDateTime value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserRecord
     */
    public UserRecord() {
        super(User.USER);
    }

    /**
     * Create a detached, initialised UserRecord
     */
    public UserRecord(@Nonnull Long id, @Nullable String originUid, @Nonnull LocalDateTime createTime, @Nonnull LocalDateTime updateTime) {
        super(User.USER);

        setId(id);
        setOriginUid(originUid);
        setCreateTime(createTime);
        setUpdateTime(updateTime);
    }
}
