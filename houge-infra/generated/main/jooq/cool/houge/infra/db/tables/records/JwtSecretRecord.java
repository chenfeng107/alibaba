/*
 * This file is generated by jOOQ.
 */
package cool.houge.infra.db.tables.records;


import cool.houge.infra.db.tables.JwtSecret;

import java.time.LocalDateTime;

import javax.annotation.Nonnull;
import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.TableRecordImpl;


/**
 * JWT 密钥
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.15.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JwtSecretRecord extends TableRecordImpl<JwtSecretRecord> implements Record6<String, String, byte[], Integer, LocalDateTime, LocalDateTime> {

    /**
     * Setter for <code>public.t_jwt_secret.id</code>. kid 标识仅支持2个字符
     */
    public JwtSecretRecord setId(@Nonnull String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.t_jwt_secret.id</code>. kid 标识仅支持2个字符
     */
    @Nonnull
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.t_jwt_secret.algorithm</code>. JWT 签名算法名称
     * 当前支持 HMAC 家族的加密算法
     */
    public JwtSecretRecord setAlgorithm(@Nonnull String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.t_jwt_secret.algorithm</code>. JWT 签名算法名称
     * 当前支持 HMAC 家族的加密算法
     */
    @Nonnull
    public String getAlgorithm() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.t_jwt_secret.secret_key</code>. 密钥
     */
    public JwtSecretRecord setSecretKey(@Nonnull byte[] value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.t_jwt_secret.secret_key</code>. 密钥
     */
    @Nonnull
    public byte[] getSecretKey() {
        return (byte[]) get(2);
    }

    /**
     * Setter for <code>public.t_jwt_secret.deleted</code>. 删除数据的时间戳（秒），值不为 0
     * 时，表示该行数据已被软删除
     */
    public JwtSecretRecord setDeleted(@Nonnull Integer value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.t_jwt_secret.deleted</code>. 删除数据的时间戳（秒），值不为 0
     * 时，表示该行数据已被软删除
     */
    @Nonnull
    public Integer getDeleted() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>public.t_jwt_secret.create_time</code>. 创建时间
     */
    public JwtSecretRecord setCreateTime(@Nonnull LocalDateTime value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.t_jwt_secret.create_time</code>. 创建时间
     */
    @Nonnull
    public LocalDateTime getCreateTime() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>public.t_jwt_secret.update_time</code>. 修改时间
     */
    public JwtSecretRecord setUpdateTime(@Nonnull LocalDateTime value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.t_jwt_secret.update_time</code>. 修改时间
     */
    @Nonnull
    public LocalDateTime getUpdateTime() {
        return (LocalDateTime) get(5);
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    @Nonnull
    public Row6<String, String, byte[], Integer, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    @Nonnull
    public Row6<String, String, byte[], Integer, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    @Nonnull
    public Field<String> field1() {
        return JwtSecret.JWT_SECRET.ID;
    }

    @Override
    @Nonnull
    public Field<String> field2() {
        return JwtSecret.JWT_SECRET.ALGORITHM;
    }

    @Override
    @Nonnull
    public Field<byte[]> field3() {
        return JwtSecret.JWT_SECRET.SECRET_KEY;
    }

    @Override
    @Nonnull
    public Field<Integer> field4() {
        return JwtSecret.JWT_SECRET.DELETED;
    }

    @Override
    @Nonnull
    public Field<LocalDateTime> field5() {
        return JwtSecret.JWT_SECRET.CREATE_TIME;
    }

    @Override
    @Nonnull
    public Field<LocalDateTime> field6() {
        return JwtSecret.JWT_SECRET.UPDATE_TIME;
    }

    @Override
    @Nonnull
    public String component1() {
        return getId();
    }

    @Override
    @Nonnull
    public String component2() {
        return getAlgorithm();
    }

    @Override
    @Nonnull
    public byte[] component3() {
        return getSecretKey();
    }

    @Override
    @Nonnull
    public Integer component4() {
        return getDeleted();
    }

    @Override
    @Nonnull
    public LocalDateTime component5() {
        return getCreateTime();
    }

    @Override
    @Nonnull
    public LocalDateTime component6() {
        return getUpdateTime();
    }

    @Override
    @Nonnull
    public String value1() {
        return getId();
    }

    @Override
    @Nonnull
    public String value2() {
        return getAlgorithm();
    }

    @Override
    @Nonnull
    public byte[] value3() {
        return getSecretKey();
    }

    @Override
    @Nonnull
    public Integer value4() {
        return getDeleted();
    }

    @Override
    @Nonnull
    public LocalDateTime value5() {
        return getCreateTime();
    }

    @Override
    @Nonnull
    public LocalDateTime value6() {
        return getUpdateTime();
    }

    @Override
    @Nonnull
    public JwtSecretRecord value1(@Nonnull String value) {
        setId(value);
        return this;
    }

    @Override
    @Nonnull
    public JwtSecretRecord value2(@Nonnull String value) {
        setAlgorithm(value);
        return this;
    }

    @Override
    @Nonnull
    public JwtSecretRecord value3(@Nonnull byte[] value) {
        setSecretKey(value);
        return this;
    }

    @Override
    @Nonnull
    public JwtSecretRecord value4(@Nonnull Integer value) {
        setDeleted(value);
        return this;
    }

    @Override
    @Nonnull
    public JwtSecretRecord value5(@Nonnull LocalDateTime value) {
        setCreateTime(value);
        return this;
    }

    @Override
    @Nonnull
    public JwtSecretRecord value6(@Nonnull LocalDateTime value) {
        setUpdateTime(value);
        return this;
    }

    @Override
    @Nonnull
    public JwtSecretRecord values(@Nonnull String value1, @Nonnull String value2, @Nonnull byte[] value3, @Nonnull Integer value4, @Nonnull LocalDateTime value5, @Nonnull LocalDateTime value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached JwtSecretRecord
     */
    public JwtSecretRecord() {
        super(JwtSecret.JWT_SECRET);
    }

    /**
     * Create a detached, initialised JwtSecretRecord
     */
    public JwtSecretRecord(@Nonnull String id, @Nonnull String algorithm, @Nonnull byte[] secretKey, @Nonnull Integer deleted, @Nonnull LocalDateTime createTime, @Nonnull LocalDateTime updateTime) {
        super(JwtSecret.JWT_SECRET);

        setId(id);
        setAlgorithm(algorithm);
        setSecretKey(secretKey);
        setDeleted(deleted);
        setCreateTime(createTime);
        setUpdateTime(updateTime);
    }
}
